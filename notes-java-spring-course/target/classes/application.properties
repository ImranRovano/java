#allows us to access, navigate, and query database
#spring.h2.console.enabled=true

#using this path in the web browser will take you to the database: ie: http://localhost:8080/h2-console
#to access the h2 console in the browser you must look in the console of the eclipse IDE. Look for the line that says "H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:<some hash code>'"
#spring.h2.console.path=/h2-console

#allows us see/read the logs of what is happening in the console. By default it also creates the database from the model file(Project.java) or any model file that include the Entity(which represents a table in the database) annotation when using jpa(java persitent api). 
#spring.jpa.show-sql=true 

#this removes the cache so the browser refresh is updated everytime to be able to see the changes made to files. Basically enabling live changes
#spring.thymeleaf.cache=false

#configure the url when connecting to h2 in the browser
#spring.datasource.url=jdbc:h2:mem:testdb

#if you have your own schema.sql file, you must have this configuration set to "none". This configuration will follow the rules set in the schema file, not from the java entities file
# spring.jpa.hibernate.ddl-auto=none

secretKey = ${envVar}

#spring.profiles.active=test
#jdbc.url=jdbc:h2:mem:test;MODE=PostgreSQL;DB_CLOSE_DELAY=-1

#################################################

#using PostgreSQL database
spring.datasource.url=jdbc:postgresql://localhost:5432/pma-springbootdb
spring.datasource.username=postgres
spring.datasource.password=@zYh5!
spring.datasource.initialization-mode=never
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jpa.show-sql=true
spring.thymeleaf.cache=false

server.error.whitelabel.enabled=false

spring.jpa.properties.javax.persistence.validation.mode=none




